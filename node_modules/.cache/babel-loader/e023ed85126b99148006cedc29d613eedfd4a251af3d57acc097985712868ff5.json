{"ast":null,"code":"import { uiActions } from \"./uiSlice\";\n// Thunk action creator for sending cart data to the backend\nconst sendCartData = cart => {\n  // Returns an async function for Redux Thunk middleware\n  return async dispatch => {\n    // Dispatch a notification to indicate sending is in progress\n    dispatch(uiActions.showNotification({\n      status: \"pending\",\n      title: \"Sending\",\n      message: \"Sending Data to Firebase\"\n    }));\n\n    // Helper function to send the HTTP request\n    const sendRequest = async () => {\n      // Send a PUT request to update the cart data in Firebase\n      const response = await fetch(\"https://my-demo-database-e2531-default-rtdb.firebaseio.com/cart.json\", {\n        method: \"PUT\",\n        // Use PUT to overwrite the cart data\n        body: JSON.stringify({\n          items: cart.items,\n          // Cart items to be sent\n          totalQuantity: cart.totalQuantity // Total quantity to be sent\n        })\n      });\n      // If the response is not OK, throw an error\n      if (!response.ok) {\n        throw new Error(\"Sending cart data failed\");\n      }\n    };\n    try {\n      // Attempt to send the cart data\n      await sendRequest();\n      // Dispatch a success notification if sending succeeds\n      dispatch(uiActions.showNotification({\n        status: \"success\",\n        title: \"success\",\n        message: \"Sent cart data successfully\"\n      }));\n    } catch (error) {\n      // Dispatch an error notification if sending fails\n      dispatch(uiActions.showNotification({\n        status: \"error\",\n        title: \"Error\",\n        message: \"Sent cart data failed\"\n      }));\n    }\n  };\n};\nexport default sendCartData;","map":{"version":3,"names":["uiActions","sendCartData","cart","dispatch","showNotification","status","title","message","sendRequest","response","fetch","method","body","JSON","stringify","items","totalQuantity","ok","Error","error"],"sources":["/Users/rishabhshah/Downloads/React Projects/React Projects/AdvanceReduxProject/src/Store/ActionThunk.js"],"sourcesContent":["import { uiActions } from \"./uiSlice\";\n// Thunk action creator for sending cart data to the backend\nconst sendCartData = (cart) => {\n  // Returns an async function for Redux Thunk middleware\n  return async (dispatch) => {\n    // Dispatch a notification to indicate sending is in progress\n    dispatch(\n      uiActions.showNotification({\n        status: \"pending\",\n        title: \"Sending\",\n        message: \"Sending Data to Firebase\",\n      })\n    );\n\n    // Helper function to send the HTTP request\n    const sendRequest = async () => {\n      // Send a PUT request to update the cart data in Firebase\n      const response = await fetch(\n        \"https://my-demo-database-e2531-default-rtdb.firebaseio.com/cart.json\",\n        {\n          method: \"PUT\", // Use PUT to overwrite the cart data\n          body: JSON.stringify({\n            items: cart.items, // Cart items to be sent\n            totalQuantity: cart.totalQuantity, // Total quantity to be sent\n          }),\n        }\n      );\n      // If the response is not OK, throw an error\n      if (!response.ok) {\n        throw new Error(\"Sending cart data failed\");\n      }\n    };\n\n    try {\n      // Attempt to send the cart data\n      await sendRequest();\n      // Dispatch a success notification if sending succeeds\n      dispatch(\n        uiActions.showNotification({\n          status: \"success\",\n          title: \"success\",\n          message: \"Sent cart data successfully\",\n        })\n      );\n    } catch (error) {\n      // Dispatch an error notification if sending fails\n      dispatch(\n        uiActions.showNotification({\n          status: \"error\",\n          title: \"Error\",\n          message: \"Sent cart data failed\",\n        })\n      );\n    }\n  };\n};\n\nexport default sendCartData;\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,WAAW;AACrC;AACA,MAAMC,YAAY,GAAIC,IAAI,IAAK;EAC7B;EACA,OAAO,MAAOC,QAAQ,IAAK;IACzB;IACAA,QAAQ,CACNH,SAAS,CAACI,gBAAgB,CAAC;MACzBC,MAAM,EAAE,SAAS;MACjBC,KAAK,EAAE,SAAS;MAChBC,OAAO,EAAE;IACX,CAAC,CACH,CAAC;;IAED;IACA,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,sEAAsE,EACtE;QACEC,MAAM,EAAE,KAAK;QAAE;QACfC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBC,KAAK,EAAEb,IAAI,CAACa,KAAK;UAAE;UACnBC,aAAa,EAAEd,IAAI,CAACc,aAAa,CAAE;QACrC,CAAC;MACH,CACF,CAAC;MACD;MACA,IAAI,CAACP,QAAQ,CAACQ,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;MAC7C;IACF,CAAC;IAED,IAAI;MACF;MACA,MAAMV,WAAW,CAAC,CAAC;MACnB;MACAL,QAAQ,CACNH,SAAS,CAACI,gBAAgB,CAAC;QACzBC,MAAM,EAAE,SAAS;QACjBC,KAAK,EAAE,SAAS;QAChBC,OAAO,EAAE;MACX,CAAC,CACH,CAAC;IACH,CAAC,CAAC,OAAOY,KAAK,EAAE;MACd;MACAhB,QAAQ,CACNH,SAAS,CAACI,gBAAgB,CAAC;QACzBC,MAAM,EAAE,OAAO;QACfC,KAAK,EAAE,OAAO;QACdC,OAAO,EAAE;MACX,CAAC,CACH,CAAC;IACH;EACF,CAAC;AACH,CAAC;AAED,eAAeN,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}