{"ast":null,"code":"import { uiActions } from \"./uiSlice\";\nimport { cartActions } from \"./cartSlice\";\n\n// Thunk action creator for fetching cart data from the backend\nconst fetchCartData = () => {\n  // Return an async function that receives dispatch from Redux Thunk middleware\n  return async dispatch => {\n    // Helper function to fetch cart data from the remote database\n    const fetchData = async () => {\n      // Make a GET request to the Firebase Realtime Database endpoint\n      const response = await fetch(\"https://my-demo-database-e2531-default-rtdb.firebaseio.com/cart.json\");\n      // Parse the response JSON data\n      const data = await response.json();\n      // If the response is not OK, throw an error\n      if (!response.ok) {\n        throw new Error(\"Could not Fetch cart Data\");\n      }\n      // Return the fetched data\n      return data;\n    };\n    try {\n      // Attempt to fetch the cart data\n      const cartData = await fetchData();\n      // Dispatch an action to replace the cart in the Redux store with the fetched data\n      dispatch(cartActions.replaceCart({\n        items: cartData.items || [],\n        // Use an empty array if items are undefined\n        totalQuantity: cartData.totalQuantity // Set the total quantity from fetched data\n      }));\n    } catch (error) {\n      // If an error occurs, dispatch a UI notification action to show an error message\n      dispatch(uiActions.showNotification({\n        status: \"error\",\n        // Notification status\n        title: \"Error\",\n        // Notification title\n        message: \"Sent cart data failed\" // Notification message\n      }));\n    }\n  };\n};\nexport default fetchCartData;","map":{"version":3,"names":["uiActions","cartActions","fetchCartData","dispatch","fetchData","response","fetch","data","json","ok","Error","cartData","replaceCart","items","totalQuantity","error","showNotification","status","title","message"],"sources":["/Users/rishabhshah/Downloads/React Projects/React Projects/AdvanceReduxProject/src/Store/FetchActionThunk.js"],"sourcesContent":["import { uiActions } from \"./uiSlice\";\nimport { cartActions } from \"./cartSlice\";\n\n// Thunk action creator for fetching cart data from the backend\nconst fetchCartData = () => {\n  // Return an async function that receives dispatch from Redux Thunk middleware\n  return async (dispatch) => {\n    // Helper function to fetch cart data from the remote database\n    const fetchData = async () => {\n      // Make a GET request to the Firebase Realtime Database endpoint\n      const response = await fetch(\n        \"https://my-demo-database-e2531-default-rtdb.firebaseio.com/cart.json\"\n      );\n      // Parse the response JSON data\n      const data = await response.json();\n      // If the response is not OK, throw an error\n      if (!response.ok) {\n        throw new Error(\"Could not Fetch cart Data\");\n      }\n      // Return the fetched data\n      return data;\n    };\n\n    try {\n      // Attempt to fetch the cart data\n      const cartData = await fetchData();\n      // Dispatch an action to replace the cart in the Redux store with the fetched data\n      dispatch(\n        cartActions.replaceCart({\n          items: cartData.items || [], // Use an empty array if items are undefined\n          totalQuantity: cartData.totalQuantity, // Set the total quantity from fetched data\n        })\n      );\n    } catch (error) {\n      // If an error occurs, dispatch a UI notification action to show an error message\n      dispatch(\n        uiActions.showNotification({\n          status: \"error\", // Notification status\n          title: \"Error\", // Notification title\n          message: \"Sent cart data failed\", // Notification message\n        })\n      );\n    }\n  };\n};\n\nexport default fetchCartData;\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,WAAW;AACrC,SAASC,WAAW,QAAQ,aAAa;;AAEzC;AACA,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAC1B;EACA,OAAO,MAAOC,QAAQ,IAAK;IACzB;IACA,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,sEACF,CAAC;MACD;MACA,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClC;MACA,IAAI,CAACH,QAAQ,CAACI,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;MAC9C;MACA;MACA,OAAOH,IAAI;IACb,CAAC;IAED,IAAI;MACF;MACA,MAAMI,QAAQ,GAAG,MAAMP,SAAS,CAAC,CAAC;MAClC;MACAD,QAAQ,CACNF,WAAW,CAACW,WAAW,CAAC;QACtBC,KAAK,EAAEF,QAAQ,CAACE,KAAK,IAAI,EAAE;QAAE;QAC7BC,aAAa,EAAEH,QAAQ,CAACG,aAAa,CAAE;MACzC,CAAC,CACH,CAAC;IACH,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd;MACAZ,QAAQ,CACNH,SAAS,CAACgB,gBAAgB,CAAC;QACzBC,MAAM,EAAE,OAAO;QAAE;QACjBC,KAAK,EAAE,OAAO;QAAE;QAChBC,OAAO,EAAE,uBAAuB,CAAE;MACpC,CAAC,CACH,CAAC;IACH;EACF,CAAC;AACH,CAAC;AAED,eAAejB,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}