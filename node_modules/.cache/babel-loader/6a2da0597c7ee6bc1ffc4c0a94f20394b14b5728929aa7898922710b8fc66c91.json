{"ast":null,"code":"var _jsxFileName = \"/Users/rishabhshah/Downloads/React Projects/React Projects/AdvanceReduxProject/src/App.js\",\n  _s = $RefreshSig$();\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Cart from \"./components/Cart/Cart\";\nimport Layout from \"./components/Layout/Layout\";\nimport Products from \"./components/Shop/Products\";\nimport { Fragment, useEffect } from \"react\";\nimport Notification from \"./components/Notifications/Notification\";\nimport sendCartData from \"./Store/ActionThunk\";\nimport fetchCartData from \"./Store/FetchActionThunk\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet isInitial = true;\nfunction App() {\n  _s();\n  // Get the dispatch function from Redux to dispatch actions\n  const dispatch = useDispatch();\n\n  // Select the cart visibility state from the Redux store\n  const showCart = useSelector(state => state.ui.cartIsVisible);\n\n  // Select the cart data from the Redux store\n  const cart = useSelector(state => state.cart);\n\n  // Select the notification state from the Redux store\n  const notification = useSelector(state => state.ui.notification);\n\n  // Fetch cart data from the backend when the app loads for the first time\n  useEffect(() => {\n    dispatch(fetchCartData());\n  }, [dispatch]);\n\n  // Send cart data to the backend whenever the cart changes (except on initial load)\n  useEffect(() => {\n    // Skip sending data on the initial render\n    if (isInitial) {\n      isInitial = false;\n      return;\n    }\n    // Only send cart data if the cart has changed\n    if (cart.changed) {\n      dispatch(sendCartData(cart));\n    }\n  }, [cart, dispatch]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [notification && /*#__PURE__*/_jsxDEV(Notification, {\n      status: notification.status,\n      title: notification.title,\n      message: notification.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Layout, {\n      children: [showCart && /*#__PURE__*/_jsxDEV(Cart, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(Products, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"+0lLiRKB8WOzaKnbCMqO0rhbWxM=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useDispatch","useSelector","Cart","Layout","Products","Fragment","useEffect","Notification","sendCartData","fetchCartData","jsxDEV","_jsxDEV","isInitial","App","_s","dispatch","showCart","state","ui","cartIsVisible","cart","notification","changed","children","status","title","message","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/rishabhshah/Downloads/React Projects/React Projects/AdvanceReduxProject/src/App.js"],"sourcesContent":["import { useDispatch, useSelector } from \"react-redux\";\nimport Cart from \"./components/Cart/Cart\";\nimport Layout from \"./components/Layout/Layout\";\nimport Products from \"./components/Shop/Products\";\nimport { Fragment, useEffect } from \"react\";\nimport Notification from \"./components/Notifications/Notification\";\nimport sendCartData from \"./Store/ActionThunk\";\nimport fetchCartData from \"./Store/FetchActionThunk\";\n\nlet isInitial = true;\nfunction App() {\n  // Get the dispatch function from Redux to dispatch actions\n  const dispatch = useDispatch();\n\n  // Select the cart visibility state from the Redux store\n  const showCart = useSelector((state) => state.ui.cartIsVisible);\n\n  // Select the cart data from the Redux store\n  const cart = useSelector((state) => state.cart);\n\n  // Select the notification state from the Redux store\n  const notification = useSelector((state) => state.ui.notification);\n\n  // Fetch cart data from the backend when the app loads for the first time\n  useEffect(() => {\n    dispatch(fetchCartData());\n  }, [dispatch]);\n\n  // Send cart data to the backend whenever the cart changes (except on initial load)\n  useEffect(() => {\n    // Skip sending data on the initial render\n    if (isInitial) {\n      isInitial = false;\n      return;\n    }\n    // Only send cart data if the cart has changed\n    if (cart.changed) {\n      dispatch(sendCartData(cart));\n    }\n  }, [cart, dispatch]);\n\n  return (\n    <Fragment>\n      {notification && (\n        <Notification\n          status={notification.status}\n          title={notification.title}\n          message={notification.message}\n        />\n      )}\n      <Layout>\n        {showCart && <Cart />}\n        <Products />\n      </Layout>\n    </Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,OAAOC,IAAI,MAAM,wBAAwB;AACzC,OAAOC,MAAM,MAAM,4BAA4B;AAC/C,OAAOC,QAAQ,MAAM,4BAA4B;AACjD,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,YAAY,MAAM,yCAAyC;AAClE,OAAOC,YAAY,MAAM,qBAAqB;AAC9C,OAAOC,aAAa,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,IAAIC,SAAS,GAAG,IAAI;AACpB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA,MAAMC,QAAQ,GAAGf,WAAW,CAAC,CAAC;;EAE9B;EACA,MAAMgB,QAAQ,GAAGf,WAAW,CAAEgB,KAAK,IAAKA,KAAK,CAACC,EAAE,CAACC,aAAa,CAAC;;EAE/D;EACA,MAAMC,IAAI,GAAGnB,WAAW,CAAEgB,KAAK,IAAKA,KAAK,CAACG,IAAI,CAAC;;EAE/C;EACA,MAAMC,YAAY,GAAGpB,WAAW,CAAEgB,KAAK,IAAKA,KAAK,CAACC,EAAE,CAACG,YAAY,CAAC;;EAElE;EACAf,SAAS,CAAC,MAAM;IACdS,QAAQ,CAACN,aAAa,CAAC,CAAC,CAAC;EAC3B,CAAC,EAAE,CAACM,QAAQ,CAAC,CAAC;;EAEd;EACAT,SAAS,CAAC,MAAM;IACd;IACA,IAAIM,SAAS,EAAE;MACbA,SAAS,GAAG,KAAK;MACjB;IACF;IACA;IACA,IAAIQ,IAAI,CAACE,OAAO,EAAE;MAChBP,QAAQ,CAACP,YAAY,CAACY,IAAI,CAAC,CAAC;IAC9B;EACF,CAAC,EAAE,CAACA,IAAI,EAAEL,QAAQ,CAAC,CAAC;EAEpB,oBACEJ,OAAA,CAACN,QAAQ;IAAAkB,QAAA,GACNF,YAAY,iBACXV,OAAA,CAACJ,YAAY;MACXiB,MAAM,EAAEH,YAAY,CAACG,MAAO;MAC5BC,KAAK,EAAEJ,YAAY,CAACI,KAAM;MAC1BC,OAAO,EAAEL,YAAY,CAACK;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CACF,eACDnB,OAAA,CAACR,MAAM;MAAAoB,QAAA,GACJP,QAAQ,iBAAIL,OAAA,CAACT,IAAI;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACrBnB,OAAA,CAACP,QAAQ;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEf;AAAChB,EAAA,CA9CQD,GAAG;EAAA,QAEOb,WAAW,EAGXC,WAAW,EAGfA,WAAW,EAGHA,WAAW;AAAA;AAAA8B,EAAA,GAXzBlB,GAAG;AAgDZ,eAAeA,GAAG;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}