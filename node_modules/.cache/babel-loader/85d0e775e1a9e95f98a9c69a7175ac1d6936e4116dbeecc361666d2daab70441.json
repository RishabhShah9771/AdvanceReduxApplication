{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    items: [],\n    totalQuantity: 0\n  },\n  reducers: {\n    replaceCart(state, action) {\n      state.totalQuantity = action.payload.totalQuantity;\n      state.items = action.payload.items;\n    },\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = (state.items || []).find(item => item.id === newItem.id);\n      state.totalQuantity++;\n      if (!existingItem) {\n        if (!Array.isArray(state.items)) {\n          state.items = [];\n        }\n        state.items.push({\n          id: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title || newItem.name\n        });\n      } else {\n        existingItem.quantity = existingItem.quantity + 1;\n        existingItem.totalPrice = existingItem.totalPrice + existingItem.price;\n      }\n    },\n    removeItemFromCart(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find(item => item.id === id);\n      state.totalQuantity--;\n      if (!existingItem) {\n        return;\n      }\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter(item => item.id !== id);\n      } else {\n        existingItem.quantity--;\n        existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\n      }\n    }\n  }\n});\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"names":["createSlice","cartSlice","name","initialState","items","totalQuantity","reducers","replaceCart","state","action","payload","addItemToCart","newItem","existingItem","find","item","id","Array","isArray","push","price","quantity","totalPrice","title","removeItemFromCart","filter","cartActions","actions"],"sources":["/Users/rishabhshah/Downloads/React Projects/React Projects/AdvanceReduxProject/src/Store/cartSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: { items: [], totalQuantity: 0 },\n  reducers: {\n    replaceCart(state, action) {\n      state.totalQuantity = action.payload.totalQuantity;\n      state.items = action.payload.items;\n    },\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = (state.items || []).find(\n        (item) => item.id === newItem.id\n      );\n      state.totalQuantity++;\n      if (!existingItem) {\n        if (!Array.isArray(state.items)) {\n          state.items = [];\n        }\n        state.items.push({\n          id: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title || newItem.name,\n        });\n      } else {\n        existingItem.quantity = existingItem.quantity + 1;\n        existingItem.totalPrice = existingItem.totalPrice + existingItem.price;\n      }\n    },\n    removeItemFromCart(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find((item) => item.id === id);\n      state.totalQuantity--;\n\n      if (!existingItem) {\n        return;\n      }\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter((item) => item.id !== id);\n      } else {\n        existingItem.quantity--;\n        existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\n      }\n    },\n  },\n});\n\nexport const cartActions = cartSlice.actions;\n\nexport default cartSlice;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,SAAS,GAAGD,WAAW,CAAC;EAC5BE,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IAAEC,KAAK,EAAE,EAAE;IAAEC,aAAa,EAAE;EAAE,CAAC;EAC7CC,QAAQ,EAAE;IACRC,WAAWA,CAACC,KAAK,EAAEC,MAAM,EAAE;MACzBD,KAAK,CAACH,aAAa,GAAGI,MAAM,CAACC,OAAO,CAACL,aAAa;MAClDG,KAAK,CAACJ,KAAK,GAAGK,MAAM,CAACC,OAAO,CAACN,KAAK;IACpC,CAAC;IACDO,aAAaA,CAACH,KAAK,EAAEC,MAAM,EAAE;MAC3B,MAAMG,OAAO,GAAGH,MAAM,CAACC,OAAO;MAC9B,MAAMG,YAAY,GAAG,CAACL,KAAK,CAACJ,KAAK,IAAI,EAAE,EAAEU,IAAI,CAC1CC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKJ,OAAO,CAACI,EAChC,CAAC;MACDR,KAAK,CAACH,aAAa,EAAE;MACrB,IAAI,CAACQ,YAAY,EAAE;QACjB,IAAI,CAACI,KAAK,CAACC,OAAO,CAACV,KAAK,CAACJ,KAAK,CAAC,EAAE;UAC/BI,KAAK,CAACJ,KAAK,GAAG,EAAE;QAClB;QACAI,KAAK,CAACJ,KAAK,CAACe,IAAI,CAAC;UACfH,EAAE,EAAEJ,OAAO,CAACI,EAAE;UACdI,KAAK,EAAER,OAAO,CAACQ,KAAK;UACpBC,QAAQ,EAAE,CAAC;UACXC,UAAU,EAAEV,OAAO,CAACQ,KAAK;UACzBlB,IAAI,EAAEU,OAAO,CAACW,KAAK,IAAIX,OAAO,CAACV;QACjC,CAAC,CAAC;MACJ,CAAC,MAAM;QACLW,YAAY,CAACQ,QAAQ,GAAGR,YAAY,CAACQ,QAAQ,GAAG,CAAC;QACjDR,YAAY,CAACS,UAAU,GAAGT,YAAY,CAACS,UAAU,GAAGT,YAAY,CAACO,KAAK;MACxE;IACF,CAAC;IACDI,kBAAkBA,CAAChB,KAAK,EAAEC,MAAM,EAAE;MAChC,MAAMO,EAAE,GAAGP,MAAM,CAACC,OAAO;MACzB,MAAMG,YAAY,GAAGL,KAAK,CAACJ,KAAK,CAACU,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC;MAC/DR,KAAK,CAACH,aAAa,EAAE;MAErB,IAAI,CAACQ,YAAY,EAAE;QACjB;MACF;MACA,IAAIA,YAAY,CAACQ,QAAQ,KAAK,CAAC,EAAE;QAC/Bb,KAAK,CAACJ,KAAK,GAAGI,KAAK,CAACJ,KAAK,CAACqB,MAAM,CAAEV,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC;MAC5D,CAAC,MAAM;QACLH,YAAY,CAACQ,QAAQ,EAAE;QACvBR,YAAY,CAACS,UAAU,GAAGT,YAAY,CAACS,UAAU,GAAGT,YAAY,CAACO,KAAK;MACxE;IACF;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAMM,WAAW,GAAGzB,SAAS,CAAC0B,OAAO;AAE5C,eAAe1B,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}